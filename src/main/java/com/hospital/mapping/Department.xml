<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bkybk.dao.DepartmentDao">
	<resultMap id="BaseResultMap" type="department">
		<id column="depart_id" property="departId" />
		<result column="org_id" property="orgId" />
		<result column="code" property="code" />
		<result column="create_time" property="createTime" />
		<result column="name" property="name" />
		<result column="org_short_name" property="orgShortName" />
		<result column="en_name" property="englishName" />
		<result column="valid" property="valid" />
		<result column="spare" property="spare" />
	</resultMap>
	
	<resultMap id="DepartTreeResultMap" type="departtree">
		<id column="depart_tree_id" property="departTreeId" />
		<result column="depart_id" property="departId" />
		<result column="org_id" property="orgId" />
		<result column="parent_depart_id" property="parentDepartId" />
	</resultMap>
	
	<resultMap id="DepartTreeResultRecursionMap" type="departtree">
		<id column="depart_tree_id" property="departTreeId" />
		<result column="depart_id" property="departId" />
		<result column="org_id" property="orgId" />
		<result column="parent_depart_id" property="parentDepartId" />
		<!-- <collection property="parent" column="{parent_depart_id=parent_depart_id,org_id=org_id}" ofType="parent" javaType="java.util.List" select="selectparentDepartId">
		</collection> -->
		<collection property="parent" column="{parent_depart_id=parent_depart_id,org_id=org_id}" select="selectparentDepartId" ></collection>
	</resultMap>

	<select id="selectparentDepartId" parameterType="java.util.HashMap" resultMap="DepartTreeResultRecursionMap">
	select parent_depart_id,org_id
	 from depart_tree 
	 where depart_Id=#{parent_depart_id,jdbcType=BIGINT} 
	 and org_id=#{org_id,jdbcType=BIGINT}
	</select>

	<!-- <select id="selectChildrenDepartId" parameterType="java.util.HashMap" resultMap="DepartTreeResultRecursionMap">
	select depart_id 
	 from depart_tree
	 where
	  parent_depart_id=#{depart_id,jdbcType=BIGINT}
	  and org_id=#{orgId,jdbcType=BIGINT}
	</select> -->

	<sql id="Base_Column_List">
		depart_id, org_id, code, create_time, name, org_short_name,
		en_name, valid,
		spare
	</sql>

	<sql id="DepartTree_Column_List">
		depart_tree_id, depart_id, org_id, parent_depart_id
	</sql>

	<select id="selectByDepartId" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from department
		 where depart_id = #{departId}
	</select>



	<select id="selectParentNodeExistByName" resultType="int" parameterType="java.util.HashMap" useCache="false">
		select
		count(depart_tree_id)
		from department a, depart_tree b 
		 where
		 a.org_id=b.org_id and a.depart_id = b.depart_id and
		 b.parent_depart_id=#{departId,jdbcType=BIGINT} and
		 a.org_id=#{orgId,jdbcType=BIGINT} and
		 a.name=#{name,jdbcType=VARCHAR}
	</select>

	<select id="selectByName" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
			select
			<include refid="Base_Column_List" />
			from department
			 where
			 org_id=#{orgId,jdbcType=BIGINT} and
			 name = #{name,jdbcType=VARCHAR}
	</select>
	
	<select id="selectLikeName" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
		select
		<include refid="Base_Column_List" />
		from department
		 where
		 org_id=#{orgId,jdbcType=BIGINT} and
		 name like CONCAT('%','${name,jdbcType=VARCHAR}','%')
	</select>
	
	<select id="selectByOrgShortName" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
		select 
		<include refid="Base_Column_List" />
        from department 
		 where
		 org_id=#{orgId,jdbcType=BIGINT} and
		 org_short_name like CONCAT('%','${orgShortName,jdbcType=VARCHAR}','%')
		<if test=""></if>
	</select>

	<select id="selectDepartmentExist" resultType="int" parameterType="java.util.HashMap" useCache="false">
		select count(1) from department 
		 where
		 depart_id=#{departId,jdbcType=BIGINT} and
		 org_id =#{orgId,jdbcType=BIGINT}
	</select>

	<select id="selectDepartment" resultMap="BaseResultMap" parameterType="java.util.HashMap">
		select 
		<include refid="Base_Column_List" />
        from department 
         where 
         depart_id in 
         (${departIds})
    	 and org_id =#{orgId,jdbcType=BIGINT}
	</select>
	
	<select id="selectDepartTree" resultMap="DepartTreeResultMap" parameterType="java.util.HashMap">
		select 
		depart_tree_id, depart_id, org_id, parent_depart_id
         from depart_tree 
         where 
         parent_depart_id = #{parentDepartId,jdbcType=BIGINT} and org_id =#{orgId,jdbcType=BIGINT}
	</select>
	
	<select id="selectDepartId" resultType="long" parameterType="java.util.HashMap">
		select 
		 depart_id
         from org_depart_job_user 
         where 
         user_id = #{userId,jdbcType=BIGINT} and org_id =#{orgId,jdbcType=BIGINT}
	</select>
	
	<delete id="deleteByDepartId" parameterType="java.lang.Long">
		delete from
		department
		where depart_id=#{departId,jdbcType=BIGINT}
	</delete>

	<insert id="createDepartment" parameterType="department">
		insert into
		 department(depart_id, org_id, code, create_time, name, org_short_name,
		en_name, valid,spare)
		values(#{departId,jdbcType=BIGINT},#{orgId,jdbcType=BIGINT},#{code,jdbcType=VARCHAR},#{createTime,jdbcType=BIGINT},#{name,jdbcType=VARCHAR},#{orgShortName,jdbcType=VARCHAR},#{englishName,jdbcType=VARCHAR},#{valid,jdbcType=TINYINT},#{spare,jdbcType=VARCHAR})
	</insert>

	<insert id="createDepartTree" parameterType="departtree">
		insert into
		 depart_tree(depart_tree_id, depart_id, org_id, parent_depart_id)
		values(#{departTreeId,jdbcType=BIGINT},#{departId,jdbcType=BIGINT},#{orgId,jdbcType=BIGINT},#{parentDepartId,jdbcType=BIGINT})
	</insert>
</mapper>